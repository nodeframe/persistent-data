{"version":3,"sources":["../src/index.js"],"names":["bson","defaultPath","__dirname","Data","data","path","defaultData","load","newData","writeFileSync","serialize","existsSync","save","deserialize","readFileSync","unlink"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AACA,IAAMA,OAAO,oBAAb;;AAEA,IAAMC,cAAcC,YAAU,cAA9B;;IAEqBC,I;AAEnB,gBAAYC,IAAZ,EAAkC;AAAA,QAAjBC,IAAiB,uEAAZJ,WAAY;;AAAA;;AAChC,SAAKK,WAAL,GAAmBF,IAAnB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;;;0BAEKD,I,EAAK;AACT,WAAKG,IAAL;AACA,UAAMC,UAAU,yBAAU,KAAKJ,IAAf,EAAoBA,IAApB,CAAhB;AACA,mBAAGK,aAAH,CAAiB,KAAKJ,IAAtB,EAA2BL,KAAKU,SAAL,CAAeF,OAAf,CAA3B;AACA,aAAOA,OAAP;AACD;;;2BAEK;AACJ,UAAG,CAAC,aAAGG,UAAH,CAAc,KAAKN,IAAnB,CAAJ,EAA6B;AAC3B,eAAO,KAAKO,IAAL,EAAP;AACD,OAFD,MAEK;AACH,eAAO,KAAKR,IAAL,GAAYJ,KAAKa,WAAL,CAAiB,aAAGC,YAAH,CAAgB,KAAKT,IAArB,CAAjB,CAAnB;AACD;AACF;;;yBAEID,I,EAAK;AACR,UAAMI,UAAUJ,QAAM,KAAKE,WAA3B;AACA,mBAAGG,aAAH,CAAiB,KAAKJ,IAAtB,EAA2BL,KAAKU,SAAL,CAAeF,OAAf,CAA3B;AACA,aAAOA,OAAP;AACD;;;6BAEO;AACN,mBAAGO,MAAH,CAAU,KAAKV,IAAf;AACD;;;;;;kBA9BkBF,I","file":"index.js","sourcesContent":["import BSON from 'bson'\nimport fs from 'fs'\nimport deepmerge from 'deepmerge'\nconst bson = new BSON()\n\nconst defaultPath = __dirname+'/./data.bson'\n\nexport default class Data {\n\n  constructor(data,path=defaultPath){\n    this.defaultData = data\n    this.path = path\n  }\n\n  merge(data){\n    this.load()\n    const newData = deepmerge(this.data,data)\n    fs.writeFileSync(this.path,bson.serialize(newData))\n    return newData\n  }\n\n  load(){\n    if(!fs.existsSync(this.path)){\n      return this.save()\n    }else{\n      return this.data = bson.deserialize(fs.readFileSync(this.path))\n    }\n  }\n\n  save(data){\n    const newData = data||this.defaultData\n    fs.writeFileSync(this.path,bson.serialize(newData))\n    return newData\n  }\n\n  remove(){\n    fs.unlink(this.path)\n  }\n}\n"]}